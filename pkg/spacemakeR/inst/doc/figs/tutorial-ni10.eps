%!PS-Adobe-3.0
%%DocumentNeededResources: font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
%%+ font Symbol
%%DocumentMedia: special 504 504 0 () ()
%%Title: R Graphics Output
%%Creator: R Software
%%Pages: (atend)
%%BoundingBox: 0 0 504 504
%%EndComments
%%BeginProlog
/bp  { gs gs } def
% begin .ps.prolog
/gs  { gsave } def
/gr  { grestore } def
/ep  { showpage gr gr } def
/m   { moveto } def
/l  { rlineto } def
/np  { newpath } def
/cp  { closepath } def
/f   { fill } def
/o   { stroke } def
/c   { newpath 0 360 arc } def
/r   { 4 2 roll moveto 1 copy 3 -1 roll exch 0 exch rlineto 0 rlineto -1 mul 0 exch rlineto closepath } def
/p1  { stroke } def
/p2  { gsave bg fill grestore newpath } def
/p3  { gsave bg fill grestore stroke } def
/t   { 6 -2 roll moveto gsave rotate
       ps mul neg 0 2 1 roll rmoveto
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } def
/rgb { setrgbcolor } def
/s   { scalefont setfont } def
% end   .ps.prolog
%%IncludeResource: font Helvetica
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
%%IncludeResource: font Helvetica-Oblique
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
%%IncludeResource: font Helvetica-BoldOblique
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
%%IncludeResource: font Symbol
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
%%EndProlog
%%Page: 1 1
bp
59.04 73.44 473.76 444.96 cl
1 0 0 rgb
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
135.97 262.50 m
69.89 19.80 l
o
np
135.97 262.50 m
-19.00 -175.30 l
o
np
415.83 259.44 m
-77.26 -98.59 l
o
np
230.89 272.14 m
-25.03 10.16 l
o
np
205.86 282.30 m
-69.89 -19.80 l
o
np
205.86 282.30 m
25.03 -10.16 l
o
np
205.86 282.30 m
-14.50 64.09 l
o
np
325.93 418.26 m
1.00 -16.72 l
o
np
325.93 418.26 m
-10.72 12.94 l
o
np
326.93 401.54 m
-1.00 16.72 l
o
np
116.97 87.20 m
19.00 175.30 l
o
np
191.36 346.39 m
14.50 -64.09 l
o
np
315.21 431.20 m
10.72 -12.94 l
o
np
338.57 160.85 m
77.26 98.59 l
o
/bg { 0 setgray } def
0 setgray
135.97 262.50 3.60 c p3
415.83 259.44 3.60 c p3
230.89 272.14 3.60 c p3
205.86 282.30 3.60 c p3
325.93 418.26 3.60 c p3
326.93 401.54 3.60 c p3
116.97 87.20 3.60 c p3
191.36 346.39 3.60 c p3
315.21 431.20 3.60 c p3
338.57 160.85 3.60 c p3
0.00 0.00 504.00 504.00 cl
/ps 24 def /Font2 findfont 24 s
0 setgray
266.40 465.86 (nearest neighbors \(k=1\)) .5 0 0 t
ep
%%Trailer
%%Pages: 1
%%EOF
